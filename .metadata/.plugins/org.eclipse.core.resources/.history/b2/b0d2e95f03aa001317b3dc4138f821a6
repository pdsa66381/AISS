import java.math.BigInteger;
import java.util.Random;


public class RandomGen {

	private Random r = new Random();

	public RSABigInteger getRandExp(){
		
		int p, q;
		
		do{
			p= r.nextInt();
		}while(p < 0);
		
		do{
			q= r.nextInt();
		}while(q < 0);
		
		
		System.out.println(p + " " + q);
		
		return null;
	}

	/**
	 * Randomly generates an exponent with a given size.
	 * @param size the size of the exponent
	 * @return the exponent which is an RSABigInteger
	 */
	public RSABigInteger genRandExp(int size){

		BigInteger 	p, q, phiN;
		RSABigInteger e;
		
		//Two prime numbers q and p are randomly chosen
		q = new BigInteger(size/2, 15, new Random());
		p = new BigInteger(size/2, 15, new Random());
		
		//phiN is calculated such as phiN=(p-1).(q-1)
		phiN = p.subtract(BigInteger.ONE);
		phiN = phiN.multiply(q.subtract(BigInteger.ONE));
		
		//A random e exponent is calculated such that 
		do{
			e = new RSABigInteger(size, new Random());
		}while(e.compareTo(phiN)!=1 || e.gcd(phiN).compareTo(BigInteger.ONE)!=0);
	
		return e;
	}
	
	
	public RSABigInteger genRandInput(int size){
		
		byte[] buffer = new byte[size];
		RSABigInteger result;
		
		r.nextBytes(buffer);
		result=new RSABigInteger(buffer);
		
		return result;
	}
}
